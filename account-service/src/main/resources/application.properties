quarkus.container-image.group=quarkus-mp
quarkus.container-image.name=account-service
quarkus.kubernetes.name=account-service

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=quarkus_banking
quarkus.datasource.password=quarkus_banking
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost/quarkus_banking

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username=username-default
%test.quarkus.datasource.password=
%test.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/mem:default

quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=import.sql

%prod.quarkus.kubernetes-config.enabled=true
%prod.quarkus.kubernetes-config.secrets.enabled=true
%prod.quarkus.kubernetes-config.secrets=db-credentials

%prod.quarkus.datasource.username=${username}
%prod.quarkus.datasource.password=${password}
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgres.default:5432/quarkus_banking


# Health Probe configuration

quarkus.kubernetes.liveness-probe.initial-delay=10
quarkus.kubernetes.liveness-probe.period=2
quarkus.kubernetes.liveness-probe.timeout=5

quarkus.kubernetes.readiness-probe.initial-delay=10
quarkus.kubernetes.readiness-probe.period=2
quarkus.kubernetes.readiness-probe.timeout=5


%prod.kafka.bootstrap.servers=my-cluster-kafka-bootstrap.kafka:9092

# app to kafka
mp.messaging.outgoing.account-overdrawn.connector=smallrye-kafka
mp.messaging.outgoing.account-overdrawn.topic=overdrawn
mp.messaging.outgoing.account-overdrawn.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer
mp.messaging.outgoing.account-overdrawn.interceptor.classes=io.opentracing.contrib.kafka.TracingProducerInterceptor

mp.messaging.incoming.overdraft-update.connector=smallrye-kafka
mp.messaging.incoming.overdraft-update.topic=new-limit
mp.messaging.incoming.overdraft-update.value.deserializer=quarkus.accounts.OverdraftLimitUpdateDeserializer
mp.messaging.incoming.overdraft-update.interceptor.classes=io.opentracing.contrib.kafka.TracingConsumerInterceptor

%prod.quarkus.jaeger.endpoint=http://simplest-collector.observability:14268/api/traces
quarkus.jaeger.service-name=account-service
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1

%prod.kafka.bootstrap.servers=my-cluster-kafka-bootstrap.kafka:9092

%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=quarkus_banking
%prod.quarkus.datasource.password=quarkus_banking
%prod.quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQL10Dialect
%prod.quarkus.datasource.jdbc.driver=io.opentracing.contrib.jdbc.TracingDriver
%prod.quarkus.datasource.jdbc.url=jdbc:tracing:postgresql://postgres.default:5432/quarkus_banking

mp.openapi.extensions.smallrye.info.title=Account Service
%dev.mp.openapi.extensions.smallrye.info.title=Account Service (development)
mp.openapi.extensions.smallrye.info.version=1.0.0
mp.openapi.extensions.smallrye.info.description=Service for maintaining accounts, their balances, and issuing deposit and withdrawal transactions
mp.openapi.extensions.smallrye.info.license.name=Apache 2.0
mp.openapi.extensions.smallrye.info.license.url=https://www.apache.org/licenses/LICENSE-2.0.html
mp.openapi.extensions.smallrye.operationIdStrategy=METHOD
mp.openapi.filter=quarkus.accounts.OpenApiFilter

# Configure MicroProfile JWT

mp.jwt.verify.publickey=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3zMl7s0H8VicXJeyXCnexwrvvlzVSuJgxBSqS/4WaRO9hR3zteceJJhnJhYxBk2G38chDxe8cOUyzjPm6u/V7pQkoj9oGqsqDBQKSCWaltxMbohuVIshi41QDWDUzBnPqd1Cm9+0BW0ZmRmQu3uKReR5+VKQ9CreIjwQf6I0G8o+/wnSUb1CBnqtdVb6+LyQvl+8jUyFfMViiA3AdkWW8bTGdiJUp3MSqquOdWkp30JFRYMU4UaQ4r3FOkC6ryXgdHoumxWO4WUnBu71bx60+kKL0EaSvCoVt+yCoTMY+xBY2E7Ic/m7WDZTCZgyFTu79P8zk/S9rpeCjE8NGutXJQIDAQAB
mp.jwt.verify.issuer=http://keycloak.local/auth/realms/bank



